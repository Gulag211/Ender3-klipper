[gcode_macro BED_MESH_CALIBRATE]
[include macros.cfg]
[include mainsail.cfg]
[include KAMP_Settings.cfg]
[exclude_object]

## Client variable macro for your printer.cfg
[gcode_macro _CLIENT_VARIABLE]
variable_use_custom_pos   : True ;  use custom park coordinates for x,y [True/False]
variable_custom_park_x    : 0.0   ; custom x position; value must be within your defined min and max of X
variable_custom_park_y    : 220.0   ; custom y position; value must be within your defined min and max of Y
#variable_custom_park_dz   : 2.0   ; custom dz value; the value in mm to lift the nozzle when move to park position
#variable_retract          : 20.0   ; the value to retract while PAUSE
variable_cancel_retract   : 20.0   ; the value to retract while CANCEL_PRINT
variable_speed_retract    : 70.0  ; retract speed in mm/s
#variable_unretract        : 1.0   ; the value to unretract while RESUME
variable_speed_unretract  : 40.0  ; unretract speed in mm/s
#variable_speed_hop        : 15.0  ; z move speed in mm/s
#variable_speed_move       : 100.0 ; move speed in mm/s
variable_park_at_cancel   : True ;  allow to move the toolhead to park while execute CANCEL_PRINT [True/False]
variable_park_at_cancel_x : 0  ; different park position during CANCEL_PRINT [None/Position as Float]; park_at_cancel must be True
variable_park_at_cancel_y : 220  ; different park position during CANCEL_PRINT [None/Position as Float]; park_at_cancel must be True
## !!! Caution [firmware_retraction] must be defined in the printer.cfg if you set use_fw_retract: True !!!
#variable_use_fw_retract   : False ; use fw_retraction instead of the manual version [True/False]
#variable_idle_timeout     : 0     ; time in sec until idle_timeout kicks in. Value 0 means that no value will be set or restored
#variable_runout_sensor    : ""    ; If a sensor is defined, it will be used to cancel the execution of RESUME in case no filament is detected.
##                                   Specify the config name of the runout sensor e.g "filament_switch_sensor runout". Hint use the same as in your printer.cfg
## !!! Custom macros, please use with care and review the section of the corresponding macro.
## These macros are for simple operations like setting a status LED. Please make sure your macro does not interfere with the basic macro functions.
## Only  single line commands are supported, please create a macro if you need more than one command.
#variable_user_pause_macro : ""    ; Everything inside the "" will be executed after the klipper base pause (PAUSE_BASE) function
#variable_user_resume_macro: ""    ; Everything inside the "" will be executed before the klipper base resume (RESUME_BASE) function
#variable_user_cancel_macro: ""    ; Everything inside the "" will be executed before the klipper base cancel (CANCEL_PRINT_BASE) function
gcode:





#[display_status]
#[pause_resume]

#[virtual_sdcard]
#path: /home/pi/printer_data/gcodes
#on_error_gcode: CANCEL_PRINT

# This file contains common pin mappings for the BIGTREETECH SKR mini
# E3 v3.0. To use this config, the firmware should be compiled for the
# STM32G0B1 with a "8KiB bootloader" and USB communication.

# The "make flash" command does not work on the SKR mini E3. Instead,
# after running "make", copy the generated "out/klipper.bin" file to a
# file named "firmware.bin" on an SD card and then restart the SKR
# mini E3 with that SD card.

# See docs/Config_Reference.md for a description of parameters.

#[gcode_macro G29]
#gcode:
  #BED_MESH_PROFILE LOAD=MESHFIFTY
  #G90
  #G1 X15 Y15 Z15

[stepper_x]
step_pin: PB13
dir_pin: !PB12
enable_pin: !PB14
microsteps: 16
rotation_distance: 40
endstop_pin: tmc2209_stepper_x:virtual_endstop
position_endstop: 0
position_max: 230
homing_speed: 50
homing_retract_dist: 0

[tmc2209 stepper_x]
uart_pin: PC11
tx_pin: PC10
uart_address: 0
run_current: 1
stealthchop_threshold: 999999
driver_sgthrs: 100
diag_pin: ^PC0

[stepper_y]
step_pin: PB10
dir_pin: !PB2
enable_pin: !PB11
microsteps: 16
rotation_distance: 40
endstop_pin: tmc2209_stepper_y:virtual_endstop
position_endstop: 0
position_max: 225
homing_speed: 50
homing_retract_dist: 0

[tmc2209 stepper_y]
uart_pin: PC11
tx_pin: PC10
uart_address: 2
run_current: 1
stealthchop_threshold: 999999
driver_sgthrs: 100
diag_pin: ^PC1

[bltouch]
sensor_pin: ^PC2
control_pin: PA1
x_offset: 30
y_offset: 2
#z_offset: 0.0
pin_move_time: 0.1
speed: 25
probe_with_touch_mode: True
pin_up_touch_mode_reports_triggered: False
stow_on_each_sample: False


[safe_z_home]
home_xy_position: 115,112
speed: 50
z_hop: 10
z_hop_speed: 20


[bed_mesh]
speed: 250
horizontal_move_z: 7
mesh_min: 35, 10
mesh_max: 220, 220
probe_count: 3,3

[stepper_z]
step_pin: PB0
dir_pin: PC5
enable_pin: !PB1
microsteps: 16
rotation_distance: 8
endstop_pin: probe:z_virtual_endstop
position_max: 250
position_min: -2
homing_speed: 16

[tmc2209 stepper_z]
uart_pin: PC11
tx_pin: PC10
uart_address: 1
run_current: 0.700
stealthchop_threshold: 999999

[extruder]
max_extrude_only_distance: 200.0
step_pin: PB3
dir_pin: PB4
enable_pin: !PD1
microsteps: 16
rotation_distance: 21.2
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: PC8
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PA0
min_temp: 5
max_temp: 280
max_extrude_cross_section: 7 # for KAMP


[tmc2209 extruder]
uart_pin: PC11
tx_pin: PC10
uart_address: 3
run_current: 0.900
stealthchop_threshold: 999999


[firmware_retraction]
retract_length: 0
#   The length of filament (in mm) to retract when G10 is activated,
#   and to unretract when G11 is activated (but see
#   unretract_extra_length below). The default is 0 mm.
retract_speed: 70
#   The speed of retraction, in mm/s. The default is 20 mm/s.
#unretract_extra_length: 0
#   The length (in mm) of *additional* filament to add when
#   unretracting.
unretract_speed: 40
#   The speed of unretraction, in mm/s. The default is 10 mm/s.

[heater_bed]
heater_pin: PC9
sensor_type: ATC Semitec 104GT-2
sensor_pin: PC4
min_temp: 5
max_temp: 125

[fan] # part cooling fan
pin: PC7

[heater_fan hotend_fan]
pin: PC6
heater: extruder
heater_temp: 50.0

[temperature_sensor raspberry_pi]
sensor_type: temperature_host
min_temp: 10
max_temp: 100


[temperature_fan mobo_fan]
pin: PB15
sensor_type: temperature_mcu
max_temp: 50
min_temp: 5
target_temp: 30
control: watermark

#[filament_motion_sensor BTT]
#detection_length: 12.0
#extruder: extruder
#switch_pin: PC15
#pause_on_runout: true

[mcu rpi]
serial: /tmp/klipper_host_mcu

[adxl345]
cs_pin: rpi:None

[resonance_tester]
accel_chip: adxl345
probe_points:
    100, 100, 20  # an example





[mcu]
serial: /dev/serial/by-id/usb-Klipper_stm32g0b1xx_2E0044000F50415833323520-if00


[printer]
kinematics: cartesian
max_velocity: 300
max_accel: 4500
max_z_velocity: 30
max_z_accel: 120

[input_shaper]
shaper_freq_x: 34.6
shaper_type_x: zv
shaper_freq_y: 41.8
shaper_type_y: ei



[board_pins]
aliases:
    EXP1_1=PB5,  EXP1_3=PA9,   EXP1_5=PA10, EXP1_7=PB8, EXP1_9=<GND>,
    EXP1_2=PA15, EXP1_4=<RST>, EXP1_6=PB9,  EXP1_8=PD6, EXP1_10=<5V>

[display]
lcd_type: st7920
cs_pin: EXP1_7
sclk_pin: EXP1_6
sid_pin: EXP1_8
encoder_pins: ^EXP1_5, ^EXP1_3
click_pin: ^!EXP1_2

#start print
[gcode_macro PRINT_START]
gcode:
    {% set BED_TEMP = params.BED_TEMP|default(60)|float %}
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(190)|float %}
    # Předchozí dva řádky nám vytvořily proměnné BED_TEMP a EXTRUDER_TEMP, a doplnily je hodnotami ze Sliceru
    # V případě že slicer hodnoty nepředá, nastaví se defaultně 190 pro hotend, a 60 pro bed
    SETUP_KAMP_MESHING DISPLAY_PARAMETERS-1 LCD_ENABLE-1 FUZZ_ENABLE-1
    # Nastavení teplot
    # M104 nám nastaví teplotu na 150 stupňů. Je to teplota, kdy se dá očistit tryska a filament "neslintá"
    M104 S150
    # M190 nám nastaví teplotu bedu na hodnotu, kterou do makra předal slicer. A čekáme než se nahřeje bed
    M190 S{BED_TEMP}
    # M109 nastaví teplotu hotendu na hodnotu, kterou nám do makra předal slicer a čeká na její dosažení
    M109 S150 ; Set non dripping hotend temperature
    # UG90 nám přepne na absolutní koordináty
    G90
    # M83 přepne extruder na relativní vzdálenosti
    M83
    # POZOR - G32 je makro pro voron 2.4 a předpokládá se, že jej máte. Pro pořádek jsem jej přidal za PRINT_END
    # Toto makro nám zařídí homování a vyrovnání gantry u V2.4, pokud máte jinou tiskárnu, následující řádek smažte
    G28

     SMART_PARK
    # BED_MESH_CLEAR nám vymaže předchozí uložené hodnoty meshe, chceme začínat s čistým štítem
    BED_MESH_CLEAR
    # A následující příkaz nám zkalibruje podložku pomocí sensoru (bltouch, indukční sensor, crtouch, klicky a jiné)
    BED_MESH_CALIBRATE
  

   #G1 X3 Y6 Z5 F5000
    # Nyní sjedeme tryskou 0,3mm nad podložku
    #G1 Z0.3 F3000
     M104 S{EXTRUDER_TEMP}
    TEMPERATURE_WAIT SENSOR=extruder MINIMUM={EXTRUDER_TEMP}
    # Nyní čekáme na nahřátí trysky na hodnotu předanou slicerem
    #M109 S{EXTRUDER_TEMP}
    #G1 E20 F3000
    # Resetování vzdálenosti extruderu
    # G92 E0
    LINE_PURGE





   
  
    # Očištění trysky. Následující gcode nám pomalu posunuje trysku 14cm doprava a extruder vytlačí 30mm filamentu
    # První pohyb je pomalejší a delší (až do 12cm), a následuje rychlé očištění 2 cm na výsledných 14 cm
    #G1 X120 E30 F600
     #G1 X140 F5000
     #G92 E0
    # Následně před samotným tiskem proběhne krátká retrakce a resetování vzdálenosti extruderu
    #G1 E-0.2 F600
     #G92 E0
    
[gcode_macro PRINT_END]
gcode:
    # Uložíme aktuální stav tiskárny (pozici trysky, stav extruderu a další hodnoty)
    SAVE_GCODE_STATE NAME=STATE_PRINT_END
    # Vypneme nahřívání hotendu a bedu
    TURN_OFF_HEATERS
    # Přepneme na relativní vzdálenosti, a zvedneme trysku o 10mm nahoru
    # POZOR - pokud tisknete vysoké tisky na maximální výšku tiskárny, tento gcode vám může dělat potíže
    # Následně přepneme zpět na absolutní pozicování/vzdálenosti pomocí G90
    G91
    G1 Z10 F3000
    G90
    # Přesuneme toolhead doprava a dopředu
    # Zde záleží, kam chcete umístit toolhead/tiskovou hlavu po skončení tisku. Není dobré ji nechat viset na tiskem
    # nastavte podle vaší tiskárny a podle toho kde chcete tiskovou hlavu mít.
    # v tomto případě jde tisková hlava dopředu (Y20) a doprava (X300)
    G1 Y200
    G1 X0
    
    # Počkáme na vyčištění bufferu
    M400
    # Vynulujeme vzdálenosti extruderu
    G92 E0
    # Zatáhneme filament 20mm dovnitř hotendu
    # tento řádek nám pak umožní vytáhnout filament z tiskárny i za studena a je kompenzován 
    # v PRINT_START (proto tlačíme 30mm filamentu před tiskem)
    G1 E-20.0 F3000
    # Vypneme ventilátor
    M106 S0
    # Vypneme motory
    M84
    # Vymažeme naměřený bed mesh
    BED_MESH_CLEAR
    # Obnovíme hodnoty původního stavu tiskárny
    RESTORE_GCODE_STATE NAME=STATE_PRINT_END
    

    
#[include start.cfg]

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	  -0.112500, -0.082500, -0.125000
#*# 	  -0.125000, -0.047500, -0.020000
#*# 	  -0.097500, -0.055000, -0.062500
#*# x_count = 3
#*# y_count = 3
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = lagrange
#*# tension = 0.2
#*# min_x = 35.0
#*# max_x = 220.0
#*# min_y = 10.0
#*# max_y = 220.0
#*#
#*# [bltouch]
#*# z_offset = 2.45
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 25.372
#*# pid_ki = 1.510
#*# pid_kd = 106.563
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 73.689
#*# pid_ki = 2.005
#*# pid_kd = 677.020
